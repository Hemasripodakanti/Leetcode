class Solution:
    def ladderLength(self, beginWord: str, endWord: str, wordList: List[str]) -> int:
        wordList=set(wordList)
        q=collections.deque()
        q.append([beginWord,1])
        while q:
            word,c=q.popleft()
            if word==endWord:
                return c
            for i in range(len(word)):
                    for ch in string.ascii_lowercase[:26]:
                        new_word=word[:i]+ch+word[i+1:]
                        if new_word in wordList:
                            q.append([new_word,c+1])
                            wordList.remove(new_word)

        return 0     

        
